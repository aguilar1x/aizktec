---
description: TypeScript coding standards and type safety guidelines
globs: **/*.{ts,tsx}
alwaysApply: false
---
- Enable strict mode in your tsconfig.json for better type checking
- Use type aliases for complex types to improve readability
- Implement generics for reusable components and functions
- Utilize utility types like `Partial`, `Readonly`, and `Pick` for type manipulation
- Use readonly arrays and tuples to prevent unintended mutations
- Implement custom type guards for runtime type checking
- Utilize mapped types and conditional types for advanced type manipulation



